// <auto-generated />
using System;
using Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace PostgresMigrations.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Model.Booking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Model.Desk", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<string>("RoomId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Desks");
                });

            modelBuilder.Entity("Model.Faculty", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Faculties");
                });

            modelBuilder.Entity("Model.Room", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("FacultyId")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Model.Booking", b =>
                {
                    b.OwnsOne("Model.DateRange", "Range", b1 =>
                        {
                            b1.Property<Guid>("BookingId")
                                .HasColumnType("uuid");

                            b1.Property<DateTime>("From")
                                .HasColumnType("timestamp without time zone")
                                .HasColumnName("From");

                            b1.Property<DateTime>("To")
                                .HasColumnType("timestamp without time zone")
                                .HasColumnName("To");

                            b1.HasKey("BookingId");

                            b1.ToTable("Bookings");

                            b1.WithOwner()
                                .HasForeignKey("BookingId");
                        });

                    b.Navigation("Range");
                });

            modelBuilder.Entity("Model.Desk", b =>
                {
                    b.HasOne("Model.Room", null)
                        .WithMany("Desks")
                        .HasForeignKey("RoomId");
                });

            modelBuilder.Entity("Model.Faculty", b =>
                {
                    b.OwnsOne("Model.WorkingHours", "WorkingHours", b1 =>
                        {
                            b1.Property<string>("FacultyId")
                                .HasColumnType("text");

                            b1.Property<TimeSpan>("Closes")
                                .HasColumnType("interval")
                                .HasColumnName("Closes");

                            b1.Property<TimeSpan>("Opens")
                                .HasColumnType("interval")
                                .HasColumnName("Opens");

                            b1.HasKey("FacultyId");

                            b1.ToTable("Faculties");

                            b1.WithOwner()
                                .HasForeignKey("FacultyId");
                        });

                    b.Navigation("WorkingHours");
                });

            modelBuilder.Entity("Model.Room", b =>
                {
                    b.HasOne("Model.Faculty", null)
                        .WithMany("Rooms")
                        .HasForeignKey("FacultyId");
                });

            modelBuilder.Entity("Model.Faculty", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Model.Room", b =>
                {
                    b.Navigation("Desks");
                });
#pragma warning restore 612, 618
        }
    }
}
